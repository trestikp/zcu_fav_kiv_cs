(function ($) {
    let resultInstructions = [	
        ["0", "JMP", "0", "253"],
        ["1", "JMP", "0", "5"],
        ["2", "JMP", "0", "42"],
        ["3", "JMP", "0", "111"],
        ["4", "JMP", "0", "177"],
        ["5", "INT", "0", "4"],
        ["6", "LIT", "0", "0"],
        ["7", "STO", "1", "8"],
        ["8", "LOD", "1", "4"],
        ["9", "LOD", "1", "5"],
        ["10", "OPR", "0", "8"],
        ["11", "LIT", "0", "1"],
        ["12", "OPR", "0", "2"],
        ["13", "OPR", "0", "7"],
        ["14", "JMC", "0", "19"],
        ["15", "LOD", "1", "8"],
        ["16", "LIT", "0", "1"],
        ["17", "OPR", "0", "2"],
        ["18", "STO", "1", "8"],
        ["19", "LOD", "1", "4"],
        ["20", "LOD", "1", "5"],
        ["21", "OPR", "0", "8"],
        ["22", "LIT", "0", "1"],
        ["23", "OPR", "0", "2"],
        ["24", "OPR", "0", "7"],
        ["25", "JMC", "0", "30"],
        ["26", "LOD", "1", "8"],
        ["27", "LIT", "0", "1"],
        ["28", "OPR", "0", "2"],
        ["29", "STO", "1", "8"],
        ["30", "LOD", "1", "4"],
        ["31", "LOD", "1", "6"],
        ["32", "OPR", "0", "8"],
        ["33", "LIT", "0", "1"],
        ["34", "OPR", "0", "2"],
        ["35", "OPR", "0", "7"],
        ["36", "JMC", "0", "41"],
        ["37", "LOD", "1", "8"],
        ["38", "LIT", "0", "1"],
        ["39", "OPR", "0", "2"],
        ["40", "STO", "1", "8"],
        ["41", "RET", "0", "0"],
        ["42", "INT", "0", "4"],
        ["43", "LIT", "0", "0"],
        ["44", "STO", "1", "9"],
        ["45", "LOD", "1", "4"],
        ["46", "LOD", "1", "5"],
        ["47", "OPR", "0", "8"],
        ["48", "LOD", "1", "5"],
        ["49", "LOD", "1", "7"],
        ["50", "OPR", "0", "8"],
        ["51", "OPR", "0", "2"],
        ["52", "LIT", "0", "2"],
        ["53", "OPR", "0", "8"],
        ["54", "JMC", "0", "59"],
        ["55", "LOD", "1", "9"],
        ["56", "LIT", "0", "1"],
        ["57", "OPR", "0", "2"],
        ["58", "STO", "1", "9"],
        ["59", "LOD", "1", "4"],
        ["60", "LOD", "1", "5"],
        ["61", "OPR", "0", "8"],
        ["62", "LOD", "1", "5"],
        ["63", "LOD", "1", "7"],
        ["64", "OPR", "0", "8"],
        ["65", "LIT", "0", "1"],
        ["66", "OPR", "0", "2"],
        ["67", "OPR", "0", "7"],
        ["68", "OPR", "0", "2"],
        ["69", "LIT", "0", "2"],
        ["70", "OPR", "0", "8"],
        ["71", "JMC", "0", "76"],
        ["72", "LOD", "1", "9"],
        ["73", "LIT", "0", "1"],
        ["74", "OPR", "0", "2"],
        ["75", "STO", "1", "9"],
        ["76", "LOD", "1", "4"],
        ["77", "LOD", "1", "5"],
        ["78", "OPR", "0", "8"],
        ["79", "LIT", "0", "1"],
        ["80", "OPR", "0", "2"],
        ["81", "OPR", "0", "7"],
        ["82", "LOD", "1", "5"],
        ["83", "LOD", "1", "7"],
        ["84", "OPR", "0", "8"],
        ["85", "OPR", "0", "2"],
        ["86", "LIT", "0", "2"],
        ["87", "OPR", "0", "8"],
        ["88", "JMC", "0", "93"],
        ["89", "LOD", "1", "9"],
        ["90", "LIT", "0", "1"],
        ["91", "OPR", "0", "2"],
        ["92", "STO", "1", "9"],
        ["93", "LOD", "1", "4"],
        ["94", "LOD", "1", "5"],
        ["95", "OPR", "0", "8"],
        ["96", "LOD", "1", "5"],
        ["97", "LOD", "1", "6"],
        ["98", "OPR", "0", "8"],
        ["99", "LIT", "0", "1"],
        ["100", "OPR", "0", "2"],
        ["101", "OPR", "0", "7"],
        ["102", "OPR", "0", "2"],
        ["103", "LIT", "0", "2"],
        ["104", "OPR", "0", "8"],
        ["105", "JMC", "0", "110"],
        ["106", "LOD", "1", "9"],
        ["107", "LIT", "0", "1"],
        ["108", "OPR", "0", "2"],
        ["109", "STO", "1", "9"],
        ["110", "RET", "0", "0"],
        ["111", "INT", "0", "4"],
        ["112", "LIT", "0", "0"],
        ["113", "STO", "1", "10"],
        ["114", "LOD", "1", "4"],
        ["115", "LOD", "1", "5"],
        ["116", "OPR", "0", "8"],
        ["117", "LOD", "1", "5"],
        ["118", "LOD", "1", "7"],
        ["119", "OPR", "0", "8"],
        ["120", "OPR", "0", "2"],
        ["121", "LIT", "0", "0"],
        ["122", "OPR", "0", "9"],
        ["123", "JMC", "0", "128"],
        ["124", "LOD", "1", "10"],
        ["125", "LIT", "0", "1"],
        ["126", "OPR", "0", "2"],
        ["127", "STO", "1", "10"],
        ["128", "LOD", "1", "4"],
        ["129", "LOD", "1", "5"],
        ["130", "OPR", "0", "8"],
        ["131", "LOD", "1", "5"],
        ["132", "LOD", "1", "7"],
        ["133", "OPR", "0", "8"],
        ["134", "LIT", "0", "1"],
        ["135", "OPR", "0", "2"],
        ["136", "OPR", "0", "7"],
        ["137", "OPR", "0", "2"],
        ["138", "LIT", "0", "0"],
        ["139", "OPR", "0", "9"],
        ["140", "JMC", "0", "145"],
        ["141", "LOD", "1", "10"],
        ["142", "LIT", "0", "1"],
        ["143", "OPR", "0", "2"],
        ["144", "STO", "1", "10"],
        ["145", "LOD", "1", "4"],
        ["146", "LOD", "1", "5"],
        ["147", "OPR", "0", "8"],
        ["148", "LIT", "0", "1"],
        ["149", "OPR", "0", "2"],
        ["150", "OPR", "0", "7"],
        ["151", "LOD", "1", "5"],
        ["152", "LOD", "1", "7"],
        ["153", "OPR", "0", "8"],
        ["154", "OPR", "0", "2"],
        ["155", "LIT", "0", "0"],
        ["156", "OPR", "0", "9"],
        ["157", "JMC", "0", "162"],
        ["158", "LOD", "1", "10"],
        ["159", "LIT", "0", "1"],
        ["160", "OPR", "0", "2"],
        ["161", "STO", "1", "10"],
        ["162", "LOD", "1", "4"],
        ["163", "LOD", "1", "6"],
        ["164", "OPR", "0", "8"],
        ["165", "LOD", "1", "5"],
        ["166", "LOD", "1", "6"],
        ["167", "OPR", "0", "8"],
        ["168", "OPR", "0", "2"],
        ["169", "LIT", "0", "0"],
        ["170", "OPR", "0", "9"],
        ["171", "JMC", "0", "176"],
        ["172", "LOD", "1", "10"],
        ["173", "LIT", "0", "1"],
        ["174", "OPR", "0", "2"],
        ["175", "STO", "1", "10"],
        ["176", "RET", "0", "0"],
        ["177", "INT", "0", "4"],
        ["178", "LIT", "0", "0"],
        ["179", "STO", "1", "11"],
        ["180", "LOD", "1", "4"],
        ["181", "LOD", "1", "5"],
        ["182", "OPR", "0", "8"],
        ["183", "LOD", "1", "5"],
        ["184", "LOD", "1", "7"],
        ["185", "OPR", "0", "8"],
        ["186", "OPR", "0", "2"],
        ["187", "LIT", "0", "2"],
        ["188", "OPR", "0", "8"],
        ["189", "LOD", "1", "5"],
        ["190", "LOD", "1", "6"],
        ["191", "OPR", "0", "8"],
        ["192", "LIT", "0", "1"],
        ["193", "OPR", "0", "2"],
        ["194", "OPR", "0", "7"],
        ["195", "OPR", "0", "2"],
        ["196", "LIT", "0", "2"],
        ["197", "OPR", "0", "8"],
        ["198", "LOD", "1", "6"],
        ["199", "LOD", "1", "7"],
        ["200", "OPR", "0", "8"],
        ["201", "OPR", "0", "2"],
        ["202", "LIT", "0", "0"],
        ["203", "OPR", "0", "9"],
        ["204", "JMC", "0", "209"],
        ["205", "LOD", "1", "11"],
        ["206", "LIT", "0", "1"],
        ["207", "OPR", "0", "2"],
        ["208", "STO", "1", "11"],
        ["209", "LOD", "1", "4"],
        ["210", "LOD", "1", "6"],
        ["211", "OPR", "0", "8"],
        ["212", "LOD", "1", "5"],
        ["213", "LOD", "1", "6"],
        ["214", "OPR", "0", "8"],
        ["215", "OPR", "0", "2"],
        ["216", "LIT", "0", "2"],
        ["217", "OPR", "0", "8"],
        ["218", "LOD", "1", "6"],
        ["219", "LOD", "1", "7"],
        ["220", "OPR", "0", "8"],
        ["221", "LIT", "0", "1"],
        ["222", "OPR", "0", "2"],
        ["223", "OPR", "0", "7"],
        ["224", "OPR", "0", "2"],
        ["225", "LIT", "0", "0"],
        ["226", "OPR", "0", "9"],
        ["227", "JMC", "0", "232"],
        ["228", "LOD", "1", "11"],
        ["229", "LIT", "0", "1"],
        ["230", "OPR", "0", "2"],
        ["231", "STO", "1", "11"],
        ["232", "LOD", "1", "4"],
        ["233", "LOD", "1", "6"],
        ["234", "OPR", "0", "8"],
        ["235", "LOD", "1", "5"],
        ["236", "LOD", "1", "6"],
        ["237", "OPR", "0", "8"],
        ["238", "OPR", "0", "2"],
        ["239", "LIT", "0", "2"],
        ["240", "OPR", "0", "8"],
        ["241", "LOD", "1", "6"],
        ["242", "LOD", "1", "7"],
        ["243", "OPR", "0", "8"],
        ["244", "OPR", "0", "2"],
        ["245", "LIT", "0", "0"],
        ["246", "OPR", "0", "9"],
        ["247", "JMC", "0", "252"],
        ["248", "LOD", "1", "11"],
        ["249", "LIT", "0", "1"],
        ["250", "OPR", "0", "2"],
        ["251", "STO", "1", "11"],
        ["252", "RET", "0", "0"],
        ["253", "INT", "0", "12"],
        ["254", "LIT", "0", "5"],
        ["255", "STO", "0", "4"],
        ["256", "LIT", "0", "5"],
        ["257", "STO", "0", "5"],
        ["258", "LIT", "0", "8"],
        ["259", "STO", "0", "6"],
        ["260", "LIT", "0", "5"],
        ["261", "STO", "0", "7"],
        ["262", "CAL", "0", "1"],
        ["263", "CAL", "0", "2"],
        ["264", "CAL", "0", "3"],
        ["265", "CAL", "0", "4"],
        ["266", "RET", "0", "0"]
    ]

    let inputCode = "const a = 5, b = 5, c = 8, d = 5;\nvar res1, res2, res3, res4;\n\nprocedure negation;\n\tbegin\n\t\tres1 := 0;\n\t\t(* false *)\n\t\tif ~ a = b \n\t\t\tthen res1 := res1 + 1;\n\t\t(* false *)\n\t\tif ~a = b \n\t\t\tthen res1 := res1 + 1;\n\t\t(* true *)\n\t\tif ~a = c\n\t\t\tthen res1 := res1 + 1;\n\n\t\t(* expects res = 1 *)\n\tend;\n\nprocedure and;\n\tbegin\n\t\tres2 := 0;\n\t\t(* true *)\n\t\tif a = b & b = d \n\t\t\tthen res2 := res2 + 1;\n\t\t(* false *)\n\t\tif a = b & ~b = d \n\t\t\tthen res2 := res2 + 1;\n\t\t(* false *)\n\t\tif ~a = b & b = d \n\t\t\tthen res2 := res2 + 1;\n\t\t(* true *)\n\t\tif a = b & ~b = c\n\t\t\tthen res2 := res2 + 1;\n\n\t\t(* expects res = 2 *)\n\tend;\n\nprocedure or;\n\tbegin\n\t\tres3 := 0;\n\t\t(* true *)\n\t\tif a = b | b = d \n\t\t\tthen res3 := res3 + 1;\n\t\t(* true *)\n\t\tif a = b | ~b = d \n\t\t\tthen res3 := res3 + 1;\n\t\t(* true *)\n\t\tif ~a = b | b = d \n\t\t\tthen res3 := res3 + 1;\n\t\t(* false *)\n\t\tif a = c | b = c\n\t\t\tthen res3 := res3 + 1;\n\n\t\t(* expects res = 3 *)\n\tend;\n\nprocedure complex;\n\tbegin\n\t\tres4 := 0;\n\t\t(* true *)\n\t\tif a = b & b = d & ~b = c | c = d\n\t\t\tthen res4 := res4 + 1;\n\t\t(* true *)\n\t\tif a = c & b = c | ~c = d\n\t\t\tthen res4 := res4 + 1;\n\t\t(* false *)\n\t\tif a = c & b = c | c = d\n\t\t\tthen res4 := res4 + 1;\n\n\t\t(* expects res = 2 *)\n\tend;\n\nbegin\n\tcall negation;\n\tcall and;\n\tcall or;\n\tcall complex;\nend.";

    /**
     * Main test method. Throws exception with information if the test fails.
     */
    window.runTestCase = function() {
        Parser.parse(true, inputCode);

        TestRunner.validateInstructions(resultInstructions);
    }
})($);