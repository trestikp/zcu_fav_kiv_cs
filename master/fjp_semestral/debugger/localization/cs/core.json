{
    "modelStackNegativeError": "Pokus o přístup na zásobník záporným indexem",
    "modelMaxStackSizeError": "Překročena maximální velikost zásobníku",
    "modelBaseSearchError": "Hledání statické báze došlo do prvního rámce a level není 0 (level je ",
    "modelNonExistentInstructionError": "Neexistující instrukce",
    "modelInstructionOutOfBounds1": "Instrukce na indexu ",
    "modelInstructionOutOfBounds2": " je mimo rozsah",
    "modelReadInvalidInput": "Na vrcholu zásobníku je hodnota mimo interval <0, 255>",
    "modelReadInputEmpty": "Není co přečíst ze vstupu",
    "modelFreeBlockNotAllocated1": "Na adrese ",
    "modelFreeBlockNotAllocated2": " nezačíná žádný alokovaný blok paměti",
    "modelHeapAccessUndefined1": "Přístup do paměti na nedefinovaném indexu ",
    "modelHeapAccessUndefined2": ", velikost paměti = ",
    "modelHeapAccessUnallocated": "Přístup do nealokované paměti indexem ",
    "modelINTStackLow": "Pokus o snížení SP na -2",
    "modelINTStackFrameLow": "Pokus o snížení SP pod aktuální stack frame",
    "modelUnknownOPR": "Neznámá OPR operace ",
    "explainerLIT": "Přidá hodnotu %1 na vrchol zásobníku",
    "explainerINT": "Zvýší vrchol zásobníku o %1",
    "explainerJMP": "Skočí na instrukci %1",
    "explainerJMPErr": "Skočí na instrukci %1, která neexistuje",
    "explainerJMCNonExistent": "Hodnota na vrcholu zásobníku je %1, ale skok povede na neexistující instrukci (%2)",
    "explainerJMCJump": "Hodnota na vrcholu zásobníku je %1, bude proveden skok na instrukci %2",
    "explainerJMCDontJump": "Hodnota na vrcholu zásobníku je %1, skok nebude proveden",
    "explainerCALOutOfBoundsInstr": "Instrukce %1 je mimo rozsah",
    "explainerLevelTooHigh": "Level je příliš velký - statická báze by musela být pod prvním rámcem",
    "explainerCALOk1": "Skočí na instrukci %1, vytvoří rámec s následující instrukcí (",
    "explainerCALOk2": "), dynamickou bází (%2) a statickou bází (%3)",
    "explainerRETEnd": "Konec programu",
    "explainerRET": "Odstraní rámec, skočí na instrukci %1, nastaví bázi na dynamickou bázi %2, SP=%3",
    "explainerLOD1": "Načte hodnotu z levelu %1 adresy %2 zásobníku (index ",
    "explainerLOD2": ", hodnota ",
    "explainerLOD3": ") a přidá ji na vrchol",
    "explainerSTO": "Uloží hodnotu na vrcholu zásobníku (%1) na level %2 adresu %3 zásobníku (index ",
    "explainerWRIAsciiErr": "Hodnota na vrcholu zásobníku není unsigned byte",
    "explainerWRI": "Bude vypsána hodnota na vrcholu zásobníku (%1) jako ASCII ",
    "explainerREAInputEmpty": "Není co přečíct ze vstupu - doplňte vstup, jinak se interpret ukončí",
    "explainerREA": "Na vrchol bude přidán znak ",
    "explainerNEWInvalidArg": "Pokus o alokaci %1 buněk haldy, což není validní počet - na vrchol se přidá -1",
    "explainerNEWNoFreeSpace": "Pokus o alokaci %1 buněk haldy, ale není dostatečně velký volný blok - na vrchol se přidá -1",
    "explainerNEW": "Alokace %1 buněk haldy od indexu %2, na vrchol se přidá %2",
    "explainerDELError": "Chyba při dealokaci adresy %1 - mimo rozsah nebo není alokovaná",
    "explainerDEL": "Dealokace %1 buněk od adresy %2",
    "explainerLDAOutOfBounds": "Adresa %1 je mimo rozsah haldy",
    "explainerLDAUnallocated": "Adresa %1 není alokovaná",
    "explainerLDA": "Na vrchol zásobníku se přidá hodnota z adresy %1 v haldě",
    "explainerSTAUnallocated": "Přístup do paměti na nealokovanou adresu %1",
    "explainerSTAOutOfBounds": "Přístup na adresu mimo rozsah haldy",
    "explainerSTA": "Uloží hodnotu %1 na adresu %2 v haldě",
    "explainerPST": "Uloží hodnotu %1 na level %2 adresu %3 zásobníku (index %4)",
    "explainerEndNoJump": "Hodnota na vrcholu zásobníku je %1, skok nebude proveden a následující instrukce neexistuje",
    "explainerEndNoMoreInstructions": "Další instrukce neexistuje",
    "explainerOPR1": "Hodnota na vrcholu zásobníku se přenásobí -1 (-1 * %1)",
    "explainerOPR2": "První dvě hodnoty na vrcholu zásobníku se sečtou (%2 + %1)",
    "explainerOPR3": "První dvě hodnoty na vrcholu zásobníku se odečtou (%2 - %1)",
    "explainerOPR4": "První dvě hodnoty na vrcholu zásobníku se vynásobí (%2 * %1)",
    "explainerOPR5": "První dvě hodnoty na vrcholu zásobníku se podělí (%2 / %1)",
    "explainerOPR6": "Modulo prvních dvou hodnot na vrcholu zásobníku (%2 mod %1)",
    "explainerOPR7": "Test lichosti hodnoty na vrcholu zásobníku (%1)",
    "explainerOPR8": "Test rovnosti prvních dvou hodnot na vrcholu zásobníku (%2 == %1)",
    "explainerOPR9": "Test nerovnosti prvních dvou hodnot na vrcholu zásobníku (%2 != %1)",
    "explainerOPR10": "Test 'menší než' prvních dvou hodnot na vrcholu zásobníku (%2 < %1)",
    "explainerOPR11": "Test 'větší nebo rovno' prvních dvou hodnot na vrcholu zásobníku (%2 >= %1)",
    "explainerOPR12": "Test 'větší než' prvních dvou hodnot na vrcholu zásobníku (%2 > %1)",
    "explainerOPR13": "Test 'menší nebo rovno' prvních dvou hodnot na vrcholu zásobníku (%2 <= %1)",

    "validatorLessThan4": "Řádka obsahuje méně než 4 parametry",
    "validatorMoreThan4": "Řádka obsahuje více než 4 parametry",
    "validatorIndexInteger": "Index musí být celé číslo",
    "validatorLevelInteger": "Level (L) musí být celé číslo",
    "validatorParInteger": "Parametr (A) musí být celé číslo",
    "validatorUnkInstruction": "Neznámá instrukce",
    "validatorBadIndex": "Index instrukce neodpovídá číslu řádky. Instrukce je nutné číslovat od 0.",
    "validatorNegLevel": "Level nemůže být záporný",
    "validatorLitLevel": "LIT musí mít level 0",
    "validatorOprLevel": "OPR musí mít level 0",
    "validatorOprParam": "OPR musí mít parametr (A) mezi 1 a 13",
    "validatorCalParam": "CAL musí skočit na adresu >= 0",
    "validatorJmpLevel": "JMP musí mít level 0",
    "validatorJmpParam": "JMP musí mít parametr (A) >= 0",
    "validatorJmcLevel": "JMC musí mít level 0",
    "validatorJmcParam": "JMC musí mít parametr (A) >= 0",
    "validatorIntLevel": "INT musí mít level 0",
    "validatorRet": "RET musí mít level i parametr (A) 0",
    "validatorRea": "REA musí mít level i parametr (A) 0",
    "validatorWri": "WRI musí mít level i parametr (A) 0",
    "validatorNew": "NEW musí mít level i parametr (A) 0",
    "validatorDel": "DEL musí mít level i parametr (A) 0",
    "validatorLda": "LDA musí mít level i parametr (A) 0",
    "validatorSta": "STA musí mít level i parametr (A) 0",
    "validatorPld": "PLD musí mít level i parametr (A) 0",
    "validatorPst": "PST musí mít level i parametr (A) 0"
}
